from undirectional_list import UNode, UndirectionalList
from bidirectional_list import BidirectionalList
from cyclic_lists import CyclicList, Node
from time import time


def test1():
    l = UndirectionalList()
    l.insert_to_begin(UNode(1))
    start = time()
    l.insert_to_begin(UNode(2))
    end = time()
    print('sec: ', end - start)
    l.insert_to_end(UNode(3))
    start = time()
    l.insert_to_end(UNode(4))
    end = time()
    print('sec: ', end - start)
    l.display()
    l.insert_to_middle(UNode(5), 2)
    l.display()
    start = time()
    l.insert_to_middle(UNode(6), 3)
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.delete_from_begin()
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.delete_from_middle(3)
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.delete_from_end()
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.sub_from_begin(UNode(7))
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.sub_from_middle(UNode(8), 1)
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.sub_from_end(UNode(9))
    end = time()
    print('sec: ', end - start)
    l.display()
    print('Sum', l.sum())
    print('Index', l.find(9))


def test2():
    l = BidirectionalList()
    l.insert_to_begin(Node(1))
    start = time()
    l.insert_to_begin(Node(2))
    end = time()
    print('sec: ', end - start)
    l.insert_to_end(Node(3))
    start = time()
    l.insert_to_end(Node(4))
    end = time()
    print('sec: ', end - start)
    l.display()
    l.insert_to_middle(Node(5), 2)
    l.display()
    start = time()
    l.insert_to_middle(Node(6), 3)
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.delete_from_begin()
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.delete_from_middle(3)
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.delete_from_end()
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.sub_from_begin(Node(7))
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.sub_from_middle(Node(8), 1)
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.sub_from_end(Node(9))
    end = time()
    print('sec: ', end - start)
    l.display()
    print('Sum', l.sum())
    print('Index', l.find(9))


def test3():
    l = CyclicList()
    l.insert_to_begin(Node(1))
    start = time()
    l.insert_to_begin(Node(2))
    end = time()
    print('sec: ', end - start)
    l.insert_to_end(Node(3))
    start = time()
    l.insert_to_end(Node(4))
    end = time()
    print('sec: ', end - start)
    l.display()
    l.insert_to_middle(Node(5), 2)
    l.display()
    start = time()
    l.insert_to_middle(Node(6), 3)
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.delete_from_begin()
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.delete_from_middle(3)
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.delete_from_end()
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.sub_from_begin(Node(7))
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.sub_from_middle(Node(8), 1)
    end = time()
    print('sec: ', end - start)
    l.display()
    start = time()
    l.sub_from_end(Node(9))
    end = time()
    print('sec: ', end - start)
    l.display()
    print('Sum', l.sum())
    print('Index', l.find(9))


def main():
    print('-------UNDIRECTIONAL------')
    test1()
    print('-------BIDERECTIONAL------')
    test2()
    print('-------CYCLIC---------')
    test3()


if __name__ == '__main__':
    main()
